language: c
os: linux
dist: bionic

common_sources: &all_sources
- sourceline: 'ppa:ubuntu-toolchain-r/test'
- sourceline: 'deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic main'
  key_url: 'https://apt.llvm.org/llvm-snapshot.gpg.key'

addons:
  apt:
    packages:
      - ninja-build
      - python3
      - python3-pip

before_script:
  - curl -L https://download.videolan.org/contrib/nasm/nasm-2.14.tar.gz | tar xvz
  - cd nasm-2.14
  - ./configure && make -j2 && sudo make install
  - nasm --version
  - pip3 --disable-pip-version-check install setuptools
  - pip3 --disable-pip-version-check install meson
  - curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
  - source $HOME/.cargo/env
  - cd $TRAVIS_BUILD_DIR/ext
  - bash aom.cmd
  - bash dav1d.cmd
  - bash libgav1.cmd
  - bash rav1e.cmd
  - cd ..
  - mkdir build
  - cd build
  - cmake -DCMAKE_BUILD_TYPE=$config -DBUILD_SHARED_LIBS=OFF -DAVIF_CODEC_AOM=ON -DAVIF_LOCAL_AOM=ON -DAVIF_CODEC_DAV1D=ON -DAVIF_LOCAL_DAV1D=ON -DAVIF_CODEC_RAV1E=ON -DAVIF_LOCAL_RAV1E=ON -DAVIF_CODEC_LIBGAV1=ON -DAVIF_LOCAL_LIBGAV1=ON -DAVIF_BUILD_EXAMPLES=ON -DAVIF_BUILD_APPS=ON -DAVIF_BUILD_TESTS=ON ..
script:
  - make

matrix:
  include:
  - name: "GCC Debug"
    compiler: gcc
    config: Debug
  - name: "GCC Release"
    compiler: gcc
    config: Release
  - name: "Clang Debug"
    compiler: clang
    config: Debug
  - name: "Clang Release"
    compiler: clang
    config: Release
  - name: "Clang 10 Debug"
    compiler: clang
    config: Debug
    addons:
      apt:
        sources: *all_sources
        packages:
        - clang-10
    env: COMPILER='clang++-10' LLVM_CONFIG='/usr/bin/llvm-config-10'
  - name: "Clang 10 Release"
    compiler: clang
    config: Release
    addons:
      apt:
        sources: *all_sources
        packages:
        - clang-10
    env: COMPILER='clang++-10' LLVM_CONFIG='/usr/bin/llvm-config-10'
